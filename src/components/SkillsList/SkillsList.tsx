import './SkillsList.css';
import {
	FaHtml5,
	FaCss3Alt,
	FaJs,
	FaReact,
	FaGitAlt,
	FaLaptopCode,
	FaNetworkWired
} from 'react-icons/fa';
import {
	SiAdobeillustrator,
	SiCoreldraw,
	SiFigma,
	SiAsciidoctor,
	SiAdobephotoshop
} from 'react-icons/si';
import { MdBuild } from 'react-icons/md';
import { useSkillsContext } from '../SkillsContext';
import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';
import 'react-circular-progressbar/dist/styles.css';

const SkillsList = () => {
	const hardSkills = [
		{
			text: '–§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
			icon: <MdBuild />,
			items: [
				{ name: 'HTML', icon: <FaHtml5 />, level: 70 },
				{ name: 'CSS', icon: <FaCss3Alt />, level: 75 },
				{ name: 'JavaScript', icon: <FaJs />, level: 95 },
				{ name: 'React', icon: <FaReact />, level: 60 },
				{ name: 'AS3', icon: <SiAsciidoctor />, level: 95 }
			]
		},
		{
			text: '–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π',
			icon: <MdBuild />,
			items: [{ name: 'Git', icon: <FaGitAlt />, level: 70 }]
		},
		{
			text: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
			icon: <MdBuild />,
			items: [
				{ name: 'Visual Studio Code', icon: <FaLaptopCode />, level: 95 },
				{ name: 'Sublime Text', icon: <FaLaptopCode />, level: 95 }
			]
		},
		{
			text: '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω',
			icon: <MdBuild />,
			items: [
				{ name: 'Corel Draw', icon: <SiCoreldraw />, level: 80 },
				{ name: 'Photoshop', icon: <SiAdobephotoshop />, level: 60 },
				{ name: 'Illustrator', icon: <SiAdobeillustrator />, level: 60 },
				{ name: 'Figma', icon: <SiFigma />, level: 30 }
			]
		},
		{
			text: '–ù–µ–π—Ä–æ—Å–µ—Ç–∏',
			icon: <MdBuild />,
			items: [
				{
					name: '–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ò–ò –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞, —Ä–∏—Å—É–Ω–∫–æ–≤',
					icon: <FaNetworkWired />,
					level: 70
				}
			]
		}
	];

	const softSkills = [
		'üó£Ô∏è –û—Ç–ª–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ —Å–≤—è–∑–∏ –∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã',
		'‚è≥ –£–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —É—Å–ª–æ–≤–∏—è—Ö –∂–µ—Å—Ç–∫–∏—Ö —Å—Ä–æ–∫–æ–≤ –∏ –≤—ã—Å–æ–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è',
		'üéØ –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å',
		'üìö –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –æ–±—É—á–∞–µ–º–æ—Å—Ç–∏, –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ –Ω–æ–≤—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º'
	];

	const { setSelectedSkill } = useSkillsContext();

	const handleSkillClick = (skill: string) => {
		setSelectedSkill(skill);
	};

	return (
		<div className="skills-container">
			<div className="skills-hard">
				<h2 className="skills-title">–•–∞—Ä–¥ —Å–∫–∏–ª—ã</h2>
				<ul className="skills-list">
					{hardSkills.map((skillGroup, index) => (
						<li
							key={index}
							className="skill-group"
							onClick={() => handleSkillClick(`${index}`)}
						>
							<div className="skill-group-container">
								<div className="skills-block">
									<p className="skill-group-title">{skillGroup.text}:</p>
									{skillGroup.items.map((item, idx) => (
										<div key={idx} className="skill-block">
											<span className="skill-icon">{item.icon}</span>
											<span>{item.name}</span>
											<div className="skill-chart">
												<CircularProgressbar
													value={item.level}
													strokeWidth={50}
													className="custom-progressbar"
													styles={buildStyles({
														strokeLinecap: 'butt'
													})}
												/>
											</div>
										</div>
									))}
								</div>
							</div>
						</li>
					))}
				</ul>
			</div>
			<div className="skills-soft">
				<h2 className="skills-title">–°–æ—Ñ—Ç —Å–∫–∏–ª—ã</h2>
				<ul className="skills-list">
					{softSkills.map((skill, index) => (
						<li
							key={index}
							className="skill-group-container soft-skill"
							onClick={() => handleSkillClick(`${index}`)}
						>
							{skill}
						</li>
					))}
				</ul>
			</div>
		</div>
	);
};

export default SkillsList;
